import{_ as e,o as t,c as i,e as s}from"./app.6c09f471.js";const n={},a=s('<p><strong>Disjoint-set</strong> data structure (also called a union\u2013find data structure or merge\u2013find set) is a data structure that tracks a set of elements partitioned into a number of disjoint (non-overlapping) subsets. It provides near-constant-time operations (bounded by the inverse Ackermann function) to <em>add new sets</em>, to <em>merge existing sets</em>, and to <em>determine whether elements are in the same set</em>. In addition to many other uses (see the Applications section), disjoint-sets play a key role in Kruskal&#39;s algorithm for finding the minimum spanning tree of a graph.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/6/67/Dsu_disjoint_sets_init.svg" alt="disjoint set"></p><p><em>MakeSet</em> creates 8 singletons.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/a/ac/Dsu_disjoint_sets_final.svg" alt="disjoint set"></p><p>After some operations of <em>Union</em>, some sets are grouped together.</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><ul><li><a href="https://en.wikipedia.org/wiki/Disjoint-set_data_structure" target="_blank" rel="noopener noreferrer">Wikipedia</a></li><li><a href="https://www.youtube.com/watch?v=wU6udHRIkcc&amp;index=14&amp;t=0s&amp;list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8" target="_blank" rel="noopener noreferrer">By Abdul Bari on YouTube</a></li></ul>',7),r=[a];function o(d,m){return t(),i("div",null,r)}var p=e(n,[["render",o],["__file","index.html.vue"]]);export{p as default};
