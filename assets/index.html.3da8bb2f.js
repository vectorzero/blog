import{_ as e,o as i,c as t,e as r}from"./app.1d54f927.js";const n={},o=r('<h2 id="definitions" tabindex="-1"><a class="header-anchor" href="#definitions" aria-hidden="true">#</a> Definitions</h2><p>The <strong>Fourier Transform</strong> (<strong>FT</strong>) decomposes a function of time (a signal) into the frequencies that make it up, in a way similar to how a musical chord can be expressed as the frequencies (or pitches) of its constituent notes.</p><p>The <strong>Discrete Fourier Transform</strong> (<strong>DFT</strong>) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency. The interval at which the DTFT is sampled is the reciprocal of the duration of the input sequence. An inverse DFT is a Fourier series, using the DTFT samples as coefficients of complex sinusoids at the corresponding DTFT frequencies. It has the same sample-values as the original input sequence. The DFT is therefore said to be a frequency domain representation of the original input sequence. If the original sequence spans all the non-zero values of a function, its DTFT is continuous (and periodic), and the DFT provides discrete samples of one cycle. If the original sequence is one cycle of a periodic function, the DFT provides all the non-zero values of one DTFT cycle.</p><p>The Discrete Fourier transform transforms a sequence of <code>N</code> complex numbers:</p><p>{x<sub>n</sub>} = x<sub>0</sub>, x<sub>1</sub>, x<sub>2</sub> ..., x<sub>N-1</sub></p><p>into another sequence of complex numbers:</p><p>{X<sub>k</sub>} = X<sub>0</sub>, X<sub>1</sub>, X<sub>2</sub> ..., X<sub>N-1</sub></p><p>which is defined by:</p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/1af0a78dc50bbf118ab6bd4c4dcc3c4ff8502223" alt="DFT"></p><p>The <strong>Discrete-Time Fourier Transform</strong> (<strong>DTFT</strong>) is a form of Fourier analysis that is applicable to the uniformly-spaced samples of a continuous function. The term discrete-time refers to the fact that the transform operates on discrete data (samples) whose interval often has units of time. From only the samples, it produces a function of frequency that is a periodic summation of the continuous Fourier transform of the original continuous function.</p><p>A <strong>Fast Fourier Transform</strong> (<strong>FFT</strong>) is an algorithm that samples a signal over a period of time (or space) and divides it into its frequency components. These components are single sinusoidal oscillations at distinct frequencies each with their own amplitude and phase.</p><p>This transformation is illustrated in Diagram below. Over the time period measured in the diagram, the signal contains 3 distinct dominant frequencies.</p><p>View of a signal in the time and frequency domain:</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/6/61/FFT-Time-Frequency-View.png" alt="FFT"></p><p>An FFT algorithm computes the discrete Fourier transform (DFT) of a sequence, or its inverse (IFFT). Fourier analysis converts a signal from its original domain to a representation in the frequency domain and vice versa. An FFT rapidly computes such transformations by factorizing the DFT matrix into a product of sparse (mostly zero) factors. As a result, it manages to reduce the complexity of computing the DFT from O(n<sup>2</sup>), which arises if one simply applies the definition of DFT, to O(n log n), where n is the data size.</p><p>Here a discrete Fourier analysis of a sum of cosine waves at 10, 20, 30, 40, and 50 Hz:</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/6/64/FFT_of_Cosine_Summation_Function.png" alt="FFT"></p><h2 id="explanation" tabindex="-1"><a class="header-anchor" href="#explanation" aria-hidden="true">#</a> Explanation</h2><p>The Fourier Transform is one of deepest insights ever made. Unfortunately, the meaning is buried within dense equations:</p><p><img src="https://betterexplained.com/wp-content/plugins/wp-latexrender/pictures/45c088dbb767150fc0bacfeb49dd49e5.png" alt=""></p><p>and</p><p><img src="https://betterexplained.com/wp-content/plugins/wp-latexrender/pictures/faeb9c5bf2e60add63ae4a70b293c7b4.png" alt=""></p><p>Rather than jumping into the symbols, let&#39;s experience the key idea firsthand. Here&#39;s a plain-English metaphor:</p><ul><li><em>What does the Fourier Transform do?</em> Given a smoothie, it finds the recipe.</li><li><em>How?</em> Run the smoothie through filters to extract each ingredient.</li><li><em>Why?</em> Recipes are easier to analyze, compare, and modify than the smoothie itself.</li><li><em>How do we get the smoothie back?</em> Blend the ingredients.</li></ul><p><strong>Think With Circles, Not Just Sinusoids</strong></p><p>The Fourier Transform is about circular paths (not 1-d sinusoids) and Euler&#39;s formula is a clever way to generate one:</p><p><img src="https://betterexplained.com/wp-content/uploads/euler/equal_paths.png" alt=""></p><p>Must we use imaginary exponents to move in a circle? Nope. But it&#39;s convenient and compact. And sure, we can describe our path as coordinated motion in two dimensions (real and imaginary), but don&#39;t forget the big picture: we&#39;re just moving in a circle.</p><p><strong>Discovering The Full Transform</strong></p><p>The big insight: our signal is just a bunch of time spikes! If we merge the recipes for each time spike, we should get the recipe for the full signal.</p><p>The Fourier Transform builds the recipe frequency-by-frequency:</p><p><img src="https://betterexplained.com/wp-content/uploads/images/fourier-explained-20121219-224649.png" alt=""></p><p>A few notes:</p><ul><li>N = number of time samples we have</li><li>n = current sample we&#39;re considering (0 ... N-1)</li><li>x<sub>n</sub> = value of the signal at time n</li><li>k = current frequency we&#39;re considering (0 Hertz up to N-1 Hertz)</li><li>X<sub>k</sub> = amount of frequency k in the signal (amplitude and phase, a complex number)</li><li>The 1/N factor is usually moved to the reverse transform (going from frequencies back to time). This is allowed, though I prefer 1/N in the forward transform since it gives the actual sizes for the time spikes. You can get wild and even use 1/sqrt(N) on both transforms (going forward and back creates the 1/N factor).</li><li>n/N is the percent of the time we&#39;ve gone through. 2 <em>pi</em> k is our speed in radians / sec. e^-ix is our backwards-moving circular path. The combination is how far we&#39;ve moved, for this speed and time.</li><li>The raw equations for the Fourier Transform just say &quot;add the complex numbers&quot;. Many programming languages cannot handle complex numbers directly, so you convert everything to rectangular coordinates and add those.</li></ul><p>Stuart Riffle has a great interpretation of the Fourier Transform:</p><p><img src="https://betterexplained.com/wp-content/uploads/images/DerivedDFT.png" alt=""></p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><ul><li><a href="https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/" target="_blank" rel="noopener noreferrer">An Interactive Guide To The Fourier Transform</a></li><li><a href="https://www.youtube.com/watch?v=iN0VG9N2q0U&amp;t=0s&amp;index=77&amp;list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8" target="_blank" rel="noopener noreferrer">DFT on YouTube by Better Explained</a></li><li><a href="https://www.youtube.com/watch?v=spUNpyF58BY&amp;t=0s&amp;index=76&amp;list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8" target="_blank" rel="noopener noreferrer">FT on YouTube by 3Blue1Brown</a></li><li><a href="https://www.youtube.com/watch?v=htCj9exbGo0&amp;index=78&amp;list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&amp;t=0s" target="_blank" rel="noopener noreferrer">FFT on YouTube by Simon Xu</a></li><li>Wikipedia <ul><li><a href="https://en.wikipedia.org/wiki/Fourier_transform" target="_blank" rel="noopener noreferrer">FT</a></li><li><a href="https://www.wikiwand.com/en/Discrete_Fourier_transform" target="_blank" rel="noopener noreferrer">DFT</a></li><li><a href="https://en.wikipedia.org/wiki/Discrete-time_Fourier_transform" target="_blank" rel="noopener noreferrer">DTFT</a></li><li><a href="https://www.wikiwand.com/en/Fast_Fourier_transform" target="_blank" rel="noopener noreferrer">FFT</a></li></ul></li></ul>',38),a=[o];function s(p,c){return i(),t("div",null,a)}var l=e(n,[["render",s],["__file","index.html.vue"]]);export{l as default};
