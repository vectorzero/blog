import{_ as e,o as t,c as i,e as r}from"./app.5a2e3c6b.js";const o={},a=r('<p>A <strong>prime number</strong> (or a <strong>prime</strong>) is a natural number greater than <code>1</code> that cannot be formed by multiplying two smaller natural numbers. A natural number greater than <code>1</code> that is not prime is called a composite number. For example, <code>5</code> is prime because the only ways of writing it as a product, <code>1 \xD7 5</code> or <code>5 \xD7 1</code>, involve <code>5</code> itself. However, <code>6</code> is composite because it is the product of two numbers <code>(2 \xD7 3)</code> that are both smaller than <code>6</code>.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/f/f0/Primes-vs-composites.svg" alt="Prime Numbers"></p><p>A <strong>primality test</strong> is an algorithm for determining whether an input number is prime. Among other fields of mathematics, it is used for cryptography. Unlike integer factorization, primality tests do not generally give prime factors, only stating whether the input number is prime or not. Factorization is thought to be a computationally difficult problem, whereas primality testing is comparatively easy (its running time is polynomial in the size of the input).</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><ul><li><a href="https://en.wikipedia.org/wiki/Prime_number" target="_blank" rel="noopener noreferrer">Prime Numbers on Wikipedia</a></li><li><a href="https://en.wikipedia.org/wiki/Primality_test" target="_blank" rel="noopener noreferrer">Primality Test on Wikipedia</a></li></ul>',5),n=[a];function s(c,l){return t(),i("div",null,n)}var d=e(o,[["render",s],["__file","index.html.vue"]]);export{d as default};
